document.addEventListener("DOMContentLoaded", () => {
    // –í–∞—à–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    const cartModal = document.getElementById("cart-modal");
    const cartItemsList = document.getElementById("cart-items");
    const cartTotalDisplay = document.getElementById("cart-total");
    const modal = document.getElementById("modal");
    const closeModal = document.getElementById("close-modal");
    const modalImage = document.getElementById("modal-image");
    const modalTitle = document.getElementById("modal-title");
    const modalPrice = document.getElementById("modal-price");
    const quantityDisplay = document.getElementById("quantity");
    const addToCartButton = document.getElementById("add-to-cart");
    const submitOrderButton = document.getElementById("submit-order");
    const proceedToOrderButton = document.getElementById("proceed-to-order");
    const closeCartButton = document.getElementById("close-cart");

    let cart = {}; // –û–±—ä–µ–∫—Ç –∫–æ—Ä–∑–∏–Ω—ã
    let currentQuantity = 1;
    let itemPrice = 0;

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    function updateTotalPrice() {
        const totalPrice = itemPrice * currentQuantity;
        document.getElementById("total-price-modal").textContent = `–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ‚ÇΩ ${totalPrice}`;
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.querySelectorAll(".food-item").forEach((item) => {
        item.addEventListener("click", () => {
            itemPrice = parseInt(item.dataset.price, 10);
            modalImage.src = item.dataset.image;
            modalTitle.textContent = item.dataset.name;
            modalPrice.textContent = `‚ÇΩ ${itemPrice}`;
            currentQuantity = 1; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            quantityDisplay.textContent = currentQuantity;
            document.getElementById("order-comment").value = ""; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            modal.classList.remove("hidden");
            modal.style.display = "flex";
            updateTotalPrice(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeModal.addEventListener("click", () => {
        modal.classList.add("hidden");
        modal.style.display = "none";
    });

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–≤–∞—Ä–∞
    document.getElementById("plus").addEventListener("click", () => {
        currentQuantity++;
        quantityDisplay.textContent = currentQuantity;
        updateTotalPrice();
    });

    document.getElementById("minus").addEventListener("click", () => {
        if (currentQuantity > 1) {
            currentQuantity--;
            quantityDisplay.textContent = currentQuantity;
            updateTotalPrice();
        }
    });

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
    addToCartButton.addEventListener("click", () => {
        const itemName = modalTitle.textContent;
        const comment = document.getElementById("order-comment").value.trim(); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

        if (!cart[itemName]) {
            cart[itemName] = {
                price: itemPrice,
                quantity: 0,
                comment: "",
            };
        }

        cart[itemName].quantity += currentQuantity;
        cart[itemName].comment = comment; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        updateCart(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
        modal.classList.add("hidden");
        modal.style.display = "none";
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    function updateCart() {
        cartItemsList.innerHTML = "";
        let total = 0;

        for (const [name, item] of Object.entries(cart)) {
            const li = document.createElement("li");
            li.innerHTML = `
                <span>${name} x${item.quantity} - ‚ÇΩ ${item.price * item.quantity}</span>
                <div class="cart-item-controls">
                    <button class="cart-action" data-name="${name}" data-action="decrease">‚àí</button>
                    <button class="cart-action" data-name="${name}" data-action="increase">+</button>
                    <button class="cart-action" data-name="${name}" data-action="remove">–£–¥–∞–ª–∏—Ç—å</button>
                </div>
                <p><strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> ${item.comment || "–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"}</p>
            `;
            cartItemsList.appendChild(li);
            total += item.price * item.quantity;
        }

        cartTotalDisplay.textContent = total;

        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        document.querySelectorAll(".cart-action").forEach((button) => {
            button.addEventListener("click", (e) => {
                const name = e.target.dataset.name;
                const action = e.target.dataset.action;

                if (action === "decrease" && cart[name].quantity > 1) {
                    cart[name].quantity--;
                } else if (action === "increase") {
                    cart[name].quantity++;
                } else if (action === "remove") {
                    delete cart[name];
                }
                updateCart(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            });
        });
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –≤ Telegram
    async function sendOrderToTelegram() {
        const token = "7896482813:AAEejMOwT81LYsozkiDs2v6J7mdQJWvsskg"; // –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
        const chatId = "-1002430027699";  // –í–∞—à chat_id

        let message = `üõí *–í–∞—à –∑–∞–∫–∞–∑ —Å –Ω–æ–º–µ—Ä–∞ —Å—Ç–æ–ª–∞ ‚Ññ${tableNumber || "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω"}:*\n`;
    let total = 0;

    for (const [name, item] of Object.entries(cart)) {
        message += `- ${name} x${item.quantity} = ‚ÇΩ${item.price * item.quantity}\n`;
        if (item.comment) {
            message += `  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${item.comment}\n`;
        }
        total += item.price * item.quantity;
    }

    message += `\nüí∞ *–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:* ‚ÇΩ${total}`;

    const url = `https://api.telegram.org/bot${token}/sendMessage`;

    try {
        const response = await fetch(url, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: "Markdown",
            }),
        });

        const result = await response.json();
        if (result.ok) {
            alert("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!");
            cart = {};
            updateCart();
        } else {
            alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏–ª–∏ chat_id.");
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞:", error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º.");
    }

    // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    submitOrderButton.addEventListener("click", () => {
        if (Object.keys(cart).length === 0) {
            alert("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!");
            return;
        }
        sendOrderToTelegram();
    });

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    proceedToOrderButton.addEventListener("click", () => {
        cartModal.classList.remove("hidden");
        cartModal.style.display = "flex";
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    closeCartButton.addEventListener("click", () => {
        cartModal.classList.add("hidden");
        cartModal.style.display = "none";
    });
});
document.addEventListener("DOMContentLoaded", () => {
    const filters = document.querySelectorAll(".filter");
    const foodItems = document.querySelectorAll(".food-item");
    const cartItemsList = document.getElementById("cart-items");

    // –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
    filters.forEach((filter) => {
        filter.addEventListener("click", () => {
            const category = filter.dataset.category;

            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
            filters.forEach((btn) => btn.classList.remove("active"));
            filter.classList.add("active");

            // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
            foodItems.forEach((item) => {
                if (category === "all" || item.dataset.category === category) {
                    item.style.display = "block";
                } else {
                    item.style.display = "none";
                }
            });
        });
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–∞
    function updateCartByCategory(category) {
        cartItemsList.innerHTML = ""; // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É

        let total = 0;

        for (const [name, item] of Object.entries(cart)) {
            if (category === "all" || item.category === category) {
                const li = document.createElement("li");
                li.innerHTML = `
                    <div class="cart-item">
                        <span>${name} x${item.quantity} - ‚ÇΩ${item.price * item.quantity}</span>
                        <div class="cart-item-actions">
                            <button class="cart-action" data-name="${name}" data-action="decrease">-</button>
                            <button class="cart-action" data-name="${name}" data-action="increase">+</button>
                            <button class="cart-action" data-name="${name}" data-action="remove">–£–¥–∞–ª–∏—Ç—å</button>
                        </div>
                    </div>
                `;
                cartItemsList.appendChild(li);
                total += item.price * item.quantity;
            }
        }

        document.getElementById("cart-total").textContent = total;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–æ—Ä–∑–∏–Ω—ã
        document.querySelectorAll(".cart-action").forEach((button) => {
            button.addEventListener("click", (e) => {
                const name = e.target.dataset.name;
                const action = e.target.dataset.action;

                if (action === "decrease" && cart[name].quantity > 1) {
                    cart[name].quantity--;
                } else if (action === "increase") {
                    cart[name].quantity++;
                } else if (action === "remove") {
                    delete cart[name];
                }
                updateCartByCategory(category); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            });
        });
    }

    // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    updateCartByCategory("all");

    // –î–æ–±–∞–≤—å—Ç–µ –≤—ã–∑–æ–≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É
    // addToCart("–ü–∏—Ü—Ü–∞", "–û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞", 300);
});
// –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞ –∏–∑ URL
const urlParams = new URLSearchParams(window.location.search);
const tableNumber = urlParams.get('table'); // –°—á–∏—Ç—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä "table"

// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
const tableInfoDiv = document.getElementById('table-info');
if (tableNumber) {
    tableInfoDiv.textContent = `–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –∑–∞ —Å—Ç–æ–ª–æ–º ‚Ññ${tableNumber}`;
} else {
    tableInfoDiv.textContent = '–í–∞—à —Å—Ç–æ–ª –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ QR-–∫–æ–¥.';
}

// –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞
function sendOrder(orderDetails) {
    if (!tableNumber) {
        alert('–ù–æ–º–µ—Ä —Å—Ç–æ–ª–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ QR-–∫–æ–¥.');
        return;
    }

    // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞
    const message = `–ó–∞–∫–∞–∑ —Å –Ω–æ–º–µ—Ä–∞ —Å—Ç–æ–ª–∞: ${tableNumber}\n–¢–æ–≤–∞—Ä—ã: ${orderDetails}`;

    // –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä/Telegram-–±–æ—Ç)
    console.log(message);
    alert('–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n' + message);
}
